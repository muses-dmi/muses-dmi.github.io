<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Muses - Digital Musical Instruments on Muses</title>
    <link>/</link>
    <description>Recent content in Muses - Digital Musical Instruments on Muses</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 May 2019 13:29:41 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Examples</title>
      <link>/pat/listen/</link>
      <pubDate>Fri, 09 Aug 2019 16:42:08 +0100</pubDate>
      
      <guid>/pat/listen/</guid>
      <description> Audio Examples Perhaps the best way to get familiar with Pat is to take a listen.
We can listen to an example of Pat directly converted to audio in this example:
 To help get a feel for what is happening, we can listen to this pattern looped, with some percussion used to ground where the sequence synchronizes.
 </description>
    </item>
    
    <item>
      <title>Examples</title>
      <link>/pat/synth/</link>
      <pubDate>Fri, 09 Aug 2019 16:42:08 +0100</pubDate>
      
      <guid>/pat/synth/</guid>
      <description> Muses Audio Platform We expose a method for configuring the step sequencer found in the Muses Audio Platform using Pat.
In this screen grab of the application, we can see the following pat expression has been used to layout the step sequencer:
y y y y r y | : | r y y y | : | r y y y o y o  </description>
    </item>
    
    <item>
      <title>Pat</title>
      <link>/pat/overview/</link>
      <pubDate>Thu, 06 Jun 2019 08:16:30 +0100</pubDate>
      
      <guid>/pat/overview/</guid>
      <description>Overview Pat is a miniature domain specific programming language (DSL) which is heavily influenced by Tidal Cycles. This language was implemented as a means to explore an abstract representation of sequences of musical events for digital musical instruments.
We have used Pat to illustrate a number of perspectives on this and will continue to use it in future work.
Applications - Audio Examples We can listen to an example of Pat directly converted to audio in here and get an idea of how Pat is used.</description>
    </item>
    
    <item>
      <title>SVG Interfaces</title>
      <link>/svg_interfaces/overview/</link>
      <pubDate>Sat, 11 May 2019 08:16:30 +0100</pubDate>
      
      <guid>/svg_interfaces/overview/</guid>
      <description>Overview SVG Interfaces is an on going project exploring the design and implementation of custom controller interfaces, bridging the issue of user mapping between action and sound in interactive music systems. We have developed a simple framework utilizing functional specifications for musical interfaces and their mappings. The system is based on a subset of Scalable Vector Graphics (SVG); interfaces are described using a simple Haskell based &amp;lsquo;controller DSL&amp;rsquo; or equally using a vector drawing application (i.</description>
    </item>
    
    <item>
      <title>research papers</title>
      <link>/papers/</link>
      <pubDate>Fri, 10 May 2019 15:07:52 +0100</pubDate>
      
      <guid>/papers/</guid>
      <description>Nathan Renney and Benedict R. Gaster. (2019) Digital Expression and Representation of Rhythm. To appear in: AM&amp;rsquo;19 Proceedings of the 14th International Audio Mostly Conference on Augmented and Participatory Sound and Music Experiences.
Paper
Benedict R. Gaster, Nathan Renney and Carinna Parraman. (2019) Fun with Interfaces (SVG Interfaces for Musical Expression). In: FARM&amp;rsquo;19 - Proceedings of the 7th ACM SIGPLAN International Workshop on Functional Art, Music, Modeling, and Design.
Slides Paper</description>
    </item>
    
    <item>
      <title>Contributors</title>
      <link>/contributors/</link>
      <pubDate>Fri, 10 May 2019 13:29:41 +0100</pubDate>
      
      <guid>/contributors/</guid>
      <description>Muses is under active development by Benedict R. Gaster and Nathan Renney, along with contributions from Carinna Parraman and others.</description>
    </item>
    
    <item>
      <title>Muses - Digital Musical Instruments</title>
      <link>/posts/hello/</link>
      <pubDate>Fri, 10 May 2019 13:29:41 +0100</pubDate>
      
      <guid>/posts/hello/</guid>
      <description>Muses is an umbrella project for work being done in the Physical Computing Group at University of West of England (UWE). Our particular focus is applying programming language theory and practice, physical computing, networking, and musicial theory to design and implementation of Digitial Musical Instruments (DMI).</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Fri, 10 May 2019 13:29:41 +0100</pubDate>
      
      <guid>/projects/</guid>
      <description>SVG Interfaces SVG Interfaces is an on going project exploring the design and implementation of custom controller interfaces, bridging the issue of user mapping between action and sound in interactive music systems.
More information can be found here.
Pat - DSL for exploring Polyrhythm and Polymeter Music provides a means to explore time by sequencing musical events in a seemingly endless and expressive way. Pat is a project that takes inspiration from Tidal Cycles and provides a means to explore advanced rhythmic concepts like polyrhythm and polymeter within the context of designing digital musical instruments.</description>
    </item>
    
  </channel>
</rss>